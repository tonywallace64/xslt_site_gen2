<?xml version="1.0" encoding="ISO-8859-1"?>
<!--
File:    make_web.xsl
Author:  Tony Wallace
Contact: tony@tony.gen.nz

Licence: This program is donated to the public domain.
Freely I have received, freely I give.

I acknowledge the work of the w3 consortium that made
this work possible.
-->

<!--
Note: xslt 1.0 cannot produce multiple output files
This is done by a file element in the "abc" namespace
which is processed by xslt_extn.

Processing instructions are surrounded by <xml_tags> element
in the "abc" namespace and stored in an escaped form, until
processed by xslt_extn with a +finaloutput option.
-->

<!--
Modification: 

Put filename into comment at top of file
so that it can appear in generated documentation.
-->
<!--
Modification:
  Generating page headers in output
  now searches ancestor-or-self axis.
  Site.rnc definition changed to allow file_headers
  element in site, pages, and page element.
Reason:
  File headers relatively standard across pages
  therefore allowing on an ancestor element allows
  simpler page editing.
  Use of ancestor axis allows customisation at
  any desired level, overriding the default posed
  at a higher level.
Date: 10 June 2015
Author: Tony Wallace
-->
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
		xmlns:ax="abc" 
		xmlns:xhtml="http://www.w3.org/1999/xhtml"
version="1.0">

<!--
  <xsl:import href="ajw_utils.xsl" />
-->

  <xsl:template match='/site'>
    <xsl:comment>Generated web pages</xsl:comment>
    <site_pages>
    <xsl:for-each select="./pages">
      <xsl:apply-templates/>
    </xsl:for-each>
    </site_pages>
  </xsl:template>


<xsl:template match="pages" name="pages-template">
  <xsl:for-each select="page">
    <xsl:apply-templates/>
  </xsl:for-each>
</xsl:template>

<xsl:template match="page">
<xsl:element name="ax:file">
<xsl:attribute name="filename">
  <xsl:value-of select="./url" />
</xsl:attribute>
<xsl:message>File <xsl:value-of select="./url" /></xsl:message>
<xsl:text xml:space="preserve" >
</xsl:text>
<ax:xml_tags>
<xsl:value-of select="ancestor-or-self::node()/file_headers" />
</ax:xml_tags>
<xhtml:html xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:ax="tony.gen.nz">
<xhtml:head>
<xhtml:meta name="Keywords" content='{keywords}' />
<xhtml:title>
  <xsl:value-of select="./title" />
</xhtml:title>
<xhtml:meta name="viewport" content="width=device-width, initial-scale=1" />
<xhtml:style type="text/css">
  body {color:blue;}  
  p  {line-height=130%;}
  h1 {text-align:center;}
  h2 {text-align:center;}
  h3 {text-align:center;}
  pre { color:#800080;}
  a:link {color:#0000FF;}
  a:visited {color:#C0C000;}
  nav {
  background-image:url(images/grgcleft2.png);
  position: absolute;
  top :0px;
  bottom:0;
  left: 0;
  width: 240px;
}
  section {
  position: relative;
  margin-left: 250px;
}
</xhtml:style>
  <xsl:copy-of select="./model" />

</xhtml:head>
<xhtml:body   xmlns:xhtml="http://www.w3.org/1999/xhtml" >
  <xhtml:nav>
  <xhtml:h2>Contact</xhtml:h2>
  <xhtml:ul>
  <xhtml:li><xsl:value-of select="ancestor::pages/contact-phone"/></xhtml:li>
  <xhtml:li><xsl:copy-of  select="ancestor::pages/contact-email/*"/></xhtml:li>
  <xhtml:li><xhtml:a><xsl:attribute name="href"><xsl:value-of select="ancestor::pages/homepage"/></xsl:attribute>Home Page</xhtml:a></xhtml:li>
  <xsl:choose>
    <xsl:when test="ancestor::pages[navtype='mesh']">
      <xsl:call-template name="meshindex" />
    </xsl:when>
    <xsl:when test="ancestor::pages[navtype='linear']">
      <xsl:call-template name="linearindex" />
    </xsl:when>
    <xsl:otherwise>
      Failed to match index template:
      <xsl:value-of select="ancestor::pages/navtype"/> 
      Current node is:
      <xsl:value-of select="string(./node())" />
    </xsl:otherwise>
  </xsl:choose>
  </xhtml:ul>
</xhtml:nav> 
<xhtml:section>
  <xsl:message>section</xsl:message>
  <xhtml:a>
    <xsl:attribute name="href">
      <xsl:value-of select="ancestor::pages/homepage"/>
    </xsl:attribute>
    <xsl:copy-of select="ancestor::pages/banner_image/child::xhtml:img"/>
  </xhtml:a>
  <xhtml:br />
  <xsl:copy-of select="./ax:content/*"/>
</xhtml:section>
</xhtml:body>
</xsl:element>
</xsl:element>
</xsl:template>

<xsl:template name="meshindex">
    <xsl:for-each select="ancestor::pages/page">
      <xhtml:li>
	<xhtml:a>
	<xsl:attribute name="href">
	  <xsl:value-of select=".//url"  />
	</xsl:attribute>
	<xsl:value-of select=".//name" />
	</xhtml:a>
      </xhtml:li>
    </xsl:for-each>
</xsl:template>

<xsl:template name="linearindex">
    Mesh linear index
    <a href="{(ancestor::pages)[1]/page[1]/url}">Home</a>
    <a href="{ancestor::pages/page[1]}">Start</a>
    <a href="{ancestor::page/preceding-sibling::page[1]/url}">Previous</a>
    <a href="{ancestor::page/following-sibling::page[1]/url}">Next</a>
</xsl:template>


</xsl:stylesheet>
